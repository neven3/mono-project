{"version":3,"sources":["Pages/Home/index.jsx","Components/EditInputField/index.jsx","Components/EditInputsContainer/index.jsx","Common/mockData.js","Stores/CarStore.js","Common/sortItems.js","Common/getCurrentCards.js","Stores/EditCardStore.js","Components/EditCard/index.jsx","Components/Card/index.jsx","Components/CardList/index.jsx","Components/Searchfield/index.jsx","Components/SortButton/index.jsx","Components/SortOption/index.jsx","Components/SortContainer/index.jsx","Components/ListManipulator/index.jsx","Components/Pagination/index.jsx","Pages/Edit/index.jsx","Pages/Main/index.jsx","Stores/PageStore.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","onClick","changeScreen","EditInputField","property","forProperty","htmlFor","name","id","type","placeholder","data-value","onChange","event","onInputChangeFunc","EditInputsContainer","propertiesArray","placeholdersObject","map","key","mockData","make","model","isNew","price","CarStore","cars","slice","searchText","sortParams","sortBy","direction","currentPage","cardsPerPage","changeSearchText","target","value","setSortParams","setCurrentPage","array","sortByKey","this","sort","a","b","toLowerCase","filter","car","includes","indexOfLastCard","indexOfFirstCard","getCurrentCards","filteredCars","decorate","observable","action","computed","currentCars","carStore","EditCardStore","setCarSpecs","input","length","changeItemInArray","arrOfKeysToChange","indexOfItemInCars","findIndex","carToJS","toJS","reduce","accBool","currentKey","forEach","Number","editCardStore","observer","Object","keys","Card","handleCardClick","screen","setState","cardClicked","state","normalCard","Intl","NumberFormat","format","Component","CardList","Math","random","Searchfield","defaultValue","SortButton","SortOption","doOnSortClick","SortContainer","ListManipulator","handleSearchfieldChange","Pagination","pageNumbers","i","ceil","totalCards","push","pageNum","Edit","instructions","children","edit","main","PageStore","bound","pageStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aae96c4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\n\r\nexport default function Home(props) {\r\n\r\n    return(\r\n        <div className=\"welcome\">\r\n            <h1>Hi, welcome to my test project!</h1>\r\n            <button\r\n                className=\"check-app\"\r\n                onClick={props.changeScreen}\r\n            >\r\n                Check the app\r\n            </button>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function EditInputField(props) {\r\n    const property = props.forProperty;\r\n    return(\r\n        <div className=\"field\">\r\n            <label htmlFor={property}>{property}</label>\r\n            <input\r\n                name={property}\r\n                id={property}\r\n                type=\"text\"\r\n                placeholder={props.placeholder}\r\n                data-value={props.placeholder}\r\n                onChange={(event) => props.onInputChangeFunc(event, property)}\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport EditInputField from '../EditInputField';\r\n\r\nexport default function EditInputsContainer(props) {\r\n    const {propertiesArray, placeholdersObject} = props;\r\n    return(\r\n        <div>\r\n            {\r\n                propertiesArray.map((property) => {\r\n                    return (\r\n                        <EditInputField\r\n                            key={property}\r\n                            forProperty={property}\r\n                            placeholder={placeholdersObject[property]}\r\n                            onInputChangeFunc={props.onInputChangeFunc}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","const mockData = [\r\n    {\r\n        make: 'Mini',\r\n        model: 'Cooper JCW GP',\r\n        isNew: true,\r\n        price: 50000,\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F50',\r\n        isNew: false,\r\n        price: 3000000,\r\n    },\r\n    {\r\n        make: 'Subaru',\r\n        model: 'Impreza 22B',\r\n        isNew: false,\r\n        price: 100000,\r\n    },\r\n    {\r\n        make: 'Audi',\r\n        model: 'RSQ8',\r\n        isNew: true,\r\n        price: 140000,\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Rapide',\r\n        isNew: false,\r\n        price: 60000,\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Flying Spur',\r\n        isNew: true,\r\n        price: 275000,\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '935',\r\n        isNew: true,\r\n        price: 1000000,\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Cayenne Turbo S',\r\n        isNew: true,\r\n        price: 200000,\r\n    },\r\n    {\r\n        make: 'Maserati',\r\n        model: 'Coupe',\r\n        isNew: false,\r\n        price: 20000,\r\n    },\r\n    {\r\n        make: 'Fisker',\r\n        model: 'Karma',\r\n        isNew: false,\r\n        price: 40000,\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F8 Tributo',\r\n        isNew: true,\r\n        price: 300000,\r\n    },\r\n    {\r\n        make: 'GMC',\r\n        model: 'Sierra 3500HD Denali',\r\n        isNew: true,\r\n        price: 80000,\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: '570S GT4',\r\n        isNew: true,\r\n        price: 200000,\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Panamera',\r\n        isNew: false,\r\n        price: 30000,\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG',\r\n        isNew: true,\r\n        price: 200000,\r\n    },\r\n    {\r\n        make: 'Ford',\r\n        model: 'F-650',\r\n        isNew: true,\r\n        price: 150000,\r\n    },\r\n    {\r\n        make: 'Pagani',\r\n        model: 'Zonda',\r\n        isNew: false,\r\n        price: 6000000,\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG 6x6',\r\n        isNew: true,\r\n        price: 1500000,\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: '599 GTO',\r\n        isNew: false,\r\n        price: 550000,\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '911 Speedster',\r\n        isNew: true,\r\n        price: 300000,\r\n    },\r\n    {\r\n        make: 'Jaguar',\r\n        model: 'XE SV Project',\r\n        isNew: true,\r\n        price: 200000,\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'GT',\r\n        isNew: true,\r\n        price: 250000,\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'P1',\r\n        isNew: false,\r\n        price: 2000000,\r\n    },\r\n    {\r\n        make: 'Lexus',\r\n        model: 'LX5709',\r\n        isNew: true,\r\n        price: 95000,\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Superleggera',\r\n        isNew: true,\r\n        price: 350000,\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Continental GT',\r\n        isNew: true,\r\n        price: 250000,\r\n    },\r\n    {\r\n        make: 'Bugatti',\r\n        model: 'Chiron',\r\n        isNew: false,\r\n        price: 3000000,\r\n    },\r\n    {\r\n        make: 'BMW',\r\n        model: 'i3',\r\n        isNew: true,\r\n        price: 50000,\r\n    },\r\n    {\r\n        make: 'Kia',\r\n        model: 'K900',\r\n        isNew: true,\r\n        price: 60000,\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Vanquish S Volante',\r\n        isNew: true,\r\n        price: 340000,\r\n    },\r\n];\r\n\r\nexport default mockData;","import cars from '../Common/mockData';\r\nimport {observable, action, decorate, computed} from 'mobx';\r\nimport sortItems from '../Common/sortItems';\r\nimport getCurrentCards from '../Common/getCurrentCards';\r\n\r\nclass CarStore {\r\n    cars = cars.slice();\r\n    searchText = '';\r\n    sortParams = {\r\n        sortBy: 'make',\r\n        direction: 'ascending',\r\n    };\r\n    currentPage = 1;\r\n    cardsPerPage = 6;\r\n\r\n    changeSearchText = (event) => {\r\n        this.searchText = event.target.value;\r\n    }\r\n\r\n    setSortParams = (sortBy, direction) => {\r\n        this.sortParams = {sortBy, direction};\r\n    }\r\n\r\n    setCurrentPage = (event) => {\r\n        this.currentPage = event.target.id\r\n    }\r\n\r\n    get filteredCars() {\r\n        const sortedCars = sortItems(this.cars.slice(), this.sortParams.direction, this.sortParams.sortBy);\r\n    \r\n        return sortedCars.filter(car => {\r\n            return(\r\n                car.make.toLowerCase().includes(this.searchText)\r\n                || car.model.toLowerCase().includes(this.searchText)\r\n            );\r\n        });\r\n    }\r\n\r\n    get currentCars() {\r\n        return getCurrentCards(this.filteredCars, this.currentPage, this.cardsPerPage);\r\n    }\r\n}\r\n\r\ndecorate(CarStore, {\r\n    cars: observable,\r\n    searchText: observable,\r\n    sortParams: observable,\r\n    currentPage: observable,\r\n    cardsPerPage: observable,\r\n    changeSearchText: action,\r\n    setSortParams: action,\r\n    setCurrentPage: action,\r\n    filteredCars: computed,\r\n    currentCars: computed,\r\n});\r\n\r\nconst carStore = new CarStore();\r\n\r\nexport default carStore;","export default function sortItems (array, direction, sortByKey) {\r\n    if (direction === 'ascending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() > b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] > b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    } else if (direction === 'descending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() < b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] < b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    }\r\n};","export default function getCurrentCards(array, currentPage, cardsPerPage) {\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = array.slice(indexOfFirstCard, indexOfLastCard);\r\n    return currentCards;\r\n}","import {observable, action, decorate, toJS} from 'mobx';\r\nimport carStore from './CarStore';\r\n\r\nclass EditCardStore {\r\n    car = {\r\n        make: '',\r\n        model: '',\r\n        price: '',\r\n    };\r\n\r\n    setCarSpecs = (event, input) => {\r\n        if (event.target.value.length !== 0) {\r\n            this.car[input] = event.target.value;\r\n        }\r\n    };\r\n\r\n    changeItemInArray = (arrOfKeysToChange, props) => {\r\n        const indexOfItemInCars = carStore.cars.findIndex((car) => {\r\n            const carToJS = toJS(car);\r\n            return(\r\n                arrOfKeysToChange.reduce((accBool, currentKey) => {\r\n                    return accBool && carToJS[currentKey] === props[currentKey];\r\n                }, true)\r\n            );\r\n        });\r\n\r\n        arrOfKeysToChange.forEach(key => {\r\n            if (this.car[key] !== '') {\r\n                if (typeof toJS(carStore.cars[indexOfItemInCars][key]) === 'number') {\r\n                    carStore.cars[indexOfItemInCars][key] = Number(this.car[key]);\r\n                } else {\r\n                    carStore.cars[indexOfItemInCars][key] = this.car[key];\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\ndecorate(EditCardStore, {\r\n    car: observable,\r\n    setCarSpecs: action,\r\n    changeItemInArray: action,\r\n});\r\n\r\nconst editCardStore = new EditCardStore();\r\n\r\nexport default editCardStore;","import React from 'react';\r\nimport './styles.css'\r\nimport EditInputsContainer from '../EditInputsContainer/';\r\nimport editCardStore from '../../Stores/EditCardStore';\r\nimport {observer} from 'mobx-react';\r\n\r\nfunction EditCard(props) {\r\n    return (\r\n        <div className=\"card-container edit-card\">\r\n            <EditInputsContainer\r\n                propertiesArray={Object.keys(editCardStore.car)}\r\n                placeholdersObject={props}\r\n                onInputChangeFunc={editCardStore.setCarSpecs}\r\n            />\r\n            <button\r\n                className=\"changes-btn\"\r\n                onClick={() => {\r\n                    editCardStore.changeItemInArray(Object.keys(editCardStore.car), props);\r\n                    props.changeScreen();\r\n                }}\r\n            >\r\n                    Make changes\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(EditCard);","import React, { Component } from 'react';\r\nimport EditCard from '../EditCard';\r\nimport './styles.css';\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {cardClicked: false};\r\n    }\r\n\r\n    handleCardClick = () => {\r\n        if (this.props.screen.includes('edit')) {\r\n            this.setState({cardClicked: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const normalCard = (\r\n            <div\r\n                className=\"card-container\"\r\n                onClick={this.handleCardClick}\r\n            >\r\n                <h3 className=\"car-make\">{this.props.car.make}</h3>\r\n                <p>{this.props.car.model}</p>\r\n                <p>${new Intl.NumberFormat('en-US').format(this.props.car.price)}</p>\r\n            </div>\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.cardClicked \r\n                        ? <EditCard\r\n                            make={this.props.car.make}\r\n                            model={this.props.car.model}\r\n                            price={this.props.car.price}\r\n                            changeScreen={() => this.props.changeScreen('main')}\r\n                        /> \r\n                        : normalCard\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '../Card';\r\nimport './styles.css';\r\n\r\nexport default function CardList(props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.cars.map(car => {\r\n                    return (\r\n                        <Card \r\n                            key={car.model + Math.random()}\r\n                            car={car}\r\n                            screen={props.screen}\r\n                            changeScreen={props.changeScreen}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport './styles.css';\r\n\r\nfunction Searchfield({placeholder, onChange, searchText}) {\r\n    return(\r\n        <div>\r\n            <h2>Find a car</h2>\r\n            <input\r\n                className=\"search\"\r\n                onChange={onChange}\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                defaultValue={searchText}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Searchfield;","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function SortButton(props) {\r\n    function handleClick() {\r\n        props.onClick(props.sortBy, props.direction);\r\n    }\r\n    \r\n    return(\r\n        <button className=\"sort-button\" onClick={handleClick}>Sort {props.direction}</button>\r\n    );\r\n};","import React from 'react';\r\nimport SortButton from '../SortButton'\r\nimport './styles.css'\r\n\r\nexport default function SortOption(props) {\r\n    return(\r\n        <div className=\"sort-option\">\r\n            <h3>Sort by {props.sortBy}</h3>\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"ascending\"\r\n                onClick={props.doOnSortClick}\r\n            />\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"descending\"\r\n                onClick={props.doOnSortClick}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport SortOption from '../SortOption';\r\n\r\nexport default function SortContainer(props) {\r\n    return(\r\n        <div>\r\n            <SortOption doOnSortClick={props.doOnSortClick} sortBy=\"make\" />\r\n            <SortOption doOnSortClick={props.doOnSortClick} sortBy=\"model\" />\r\n            <SortOption doOnSortClick={props.doOnSortClick} sortBy=\"price\" />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport Searchfield from '../Searchfield';\r\nimport SortContainer from '../SortContainer';\r\n\r\nexport default function ListManipulator(props) {\r\n    return(\r\n        <div>\r\n            <Searchfield \r\n                onChange={props.handleSearchfieldChange}\r\n                placeholder=\"search\"\r\n                searchText={props.searchText}\r\n            />\r\n            <SortContainer doOnSortClick={props.doOnSortClick} />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function Pagination(props) {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(props.totalCards / props.cardsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {pageNumbers.map(pageNum => {\r\n                return <button\r\n                    className=\"page-button\"\r\n                    key={pageNum}\r\n                    id={pageNum}\r\n                    onClick={props.setCurrentPage}\r\n                >\r\n                    {pageNum}\r\n                </button>\r\n            })}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function Edit(props) {\r\n    const instructions = props.screen === 'edit'\r\n        ? <h3>Click on a card to edit it</h3>\r\n        : <h3>Make your changes</h3>;\r\n\r\n    return(\r\n        <div className=\"screen\">\r\n            <h2>Edit a card</h2>\r\n            {instructions}\r\n            <button\r\n                className=\"go-back-button\"\r\n                onClick={() => props.changeScreen('main')}\r\n            >\r\n                Go back to main\r\n            </button>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport CardList from '../../Components/CardList';\r\nimport ListManipulator from '../../Components/ListManipulator';\r\nimport Pagination from '../../Components/Pagination'\r\nimport carStore from '../../Stores/CarStore';\r\nimport Edit from '../Edit';\r\nimport './styles.css';\r\nimport {observer} from 'mobx-react';\r\n\r\nfunction Main(props) {\r\n    const {screen, changeScreen} = props;\r\n\r\n    const edit = (\r\n        <Edit \r\n            changeScreen={changeScreen}\r\n            screen={screen}\r\n        >\r\n            <CardList\r\n                changeScreen={changeScreen}\r\n                cars={carStore.currentCars}\r\n                screen={screen}\r\n            />\r\n        </Edit>\r\n    );\r\n\r\n    const main = (\r\n        <div>\r\n            <ListManipulator\r\n                handleSearchfieldChange={carStore.changeSearchText}\r\n                doOnSortClick={carStore.setSortParams}\r\n                searchText={carStore.searchText}\r\n            />\r\n            <button\r\n                className=\"go-to-edit-btn\"\r\n                onClick={() => changeScreen('edit')}\r\n            >\r\n                Edit a card\r\n            </button>\r\n            <CardList \r\n                cars={carStore.currentCars}\r\n                screen={screen}\r\n            />\r\n            <Pagination \r\n                cardsPerPage={carStore.cardsPerPage}\r\n                totalCards={carStore.filteredCars.length}\r\n                setCurrentPage={carStore.setCurrentPage}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div className=\"Main\">\r\n            <h1>Cars</h1>\r\n            {\r\n                screen === 'main'\r\n                    ? main\r\n                    : edit\r\n            }\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default observer(Main);","import {observable, action, decorate} from 'mobx';\r\n\r\nclass PageStore {\r\n    screen = 'home';\r\n\r\n    changeScreen = screen => this.screen = screen;\r\n}\r\n\r\ndecorate(PageStore, {\r\n    screen: observable,\r\n    changeScreen: action.bound,\r\n});\r\n\r\nconst pageStore = new PageStore();\r\n\r\nexport default pageStore;","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Pages/Home';\r\nimport Main from './Pages/Main';\r\nimport pageStore from './Stores/PageStore';\r\nimport {observer} from 'mobx-react';\r\n\r\nfunction App() {\r\n  if (pageStore.screen === 'home') {\r\n    return <Home changeScreen={() => pageStore.changeScreen('main')} />\r\n  }\r\n\r\n  return(\r\n      <Main \r\n        screen={pageStore.screen}\r\n        changeScreen={pageStore.changeScreen}\r\n      />\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}